"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.CloseRequestT = exports.CloseRequest = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */
const flatbuffers = require("flatbuffers");
class CloseRequest {
    bb = null;
    bb_pos = 0;
    __init(i, bb) {
        this.bb_pos = i;
        this.bb = bb;
        return this;
    }
    static getRootAsCloseRequest(bb, obj) {
        return (obj || new CloseRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static getSizePrefixedRootAsCloseRequest(bb, obj) {
        bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
        return (obj || new CloseRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
    }
    static startCloseRequest(builder) {
        builder.startObject(0);
    }
    static endCloseRequest(builder) {
        const offset = builder.endObject();
        return offset;
    }
    static createCloseRequest(builder) {
        CloseRequest.startCloseRequest(builder);
        return CloseRequest.endCloseRequest(builder);
    }
    unpack() {
        return new CloseRequestT();
    }
    unpackTo(_o) { }
}
exports.CloseRequest = CloseRequest;
class CloseRequestT {
    constructor() { }
    pack(builder) {
        return CloseRequest.createCloseRequest(builder);
    }
}
exports.CloseRequestT = CloseRequestT;
